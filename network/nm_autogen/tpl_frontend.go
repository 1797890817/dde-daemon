package main

const tplFrontEndConnProp = `// This file is automatically generated, please don't edit manully.
import QtQuick 2.1
import Deepin.Widgets 1.0
import "../edit"

BaseEditPage {
    id: editPage
    activeExpandIndex: 0
    {{range $i, $vsection := .}}{{if .Ignore}}{{else}}{{$id := $vsection.Name | ToVsClassName | printf "section%s"}}
    EditSection{{$vsection.Name | ToVsClassName}} {
        myIndex: {{$i}}
        id: {{$id}}
        activeExpandIndex: editPage.activeExpandIndex
        // connectionSession: editPage.connectionSession
    }
    EditSectionSeparator {relatedSection: {{$id}}}
    {{end}}{{end}}
}
`

const tplFrontEndSection = `// This file is automatically generated, please don't edit manully.
import QtQuick 2.1
import Deepin.Widgets 1.0
import "../edit"

BaseEditSection { {{$sectionId := .Name | ToVsClassName | printf "section%s"}}
    id: {{$sectionId}}
    virtualSection: "{{.Name}}"
    
    header.sourceComponent: EditDownArrowHeader{
        text: dsTr("{{.DisplayName}}")
    }

    content.sourceComponent: Column { {{range $i, $key := GetAllKeysInVsection .Name}}{{if IsKeyUsedByFrontEnd $key}}{{$sectionValue := $key | ToKeyRelatedSectionValue}}{{$value := $key | ToKeyValue}}
        {{$widget := ToFrontEndWidget $key}}{{$widget}} {
            id: line{{$sectionValue | ToClassName}}{{$value | ToClassName}}
            // connectionSession: {{$sectionId}}.connectionSession
            section: "{{$sectionValue}}"
            key: "{{$value}}"
            text: dsTr("{{$key | ToKeyDisplayName}}"){{range $propKey, $propValue := GetKeyWidgetProp $key}}
            {{$propKey}}: {{$propValue}}{{end}}
        }{{end}}{{end}}
    }
}
`
