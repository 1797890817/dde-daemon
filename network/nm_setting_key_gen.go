// This file is automatically generated, please don't edit manually.
package network

// /usr/include/libnm/nm-setting-8021x.h
const (
	NM_SETTING_802_1X_CERT_SCHEME_PREFIX_PATH           = "file://"
	NM_SETTING_802_1X_SETTING_NAME                      = "802-1x"
	NM_SETTING_802_1X_EAP                               = "eap"
	NM_SETTING_802_1X_IDENTITY                          = "identity"
	NM_SETTING_802_1X_ANONYMOUS_IDENTITY                = "anonymous-identity"
	NM_SETTING_802_1X_PAC_FILE                          = "pac-file"
	NM_SETTING_802_1X_CA_CERT                           = "ca-cert"
	NM_SETTING_802_1X_CA_PATH                           = "ca-path"
	NM_SETTING_802_1X_SUBJECT_MATCH                     = "subject-match"
	NM_SETTING_802_1X_ALTSUBJECT_MATCHES                = "altsubject-matches"
	NM_SETTING_802_1X_CLIENT_CERT                       = "client-cert"
	NM_SETTING_802_1X_PHASE1_PEAPVER                    = "phase1-peapver"
	NM_SETTING_802_1X_PHASE1_PEAPLABEL                  = "phase1-peaplabel"
	NM_SETTING_802_1X_PHASE1_FAST_PROVISIONING          = "phase1-fast-provisioning"
	NM_SETTING_802_1X_PHASE2_AUTH                       = "phase2-auth"
	NM_SETTING_802_1X_PHASE2_AUTHEAP                    = "phase2-autheap"
	NM_SETTING_802_1X_PHASE2_CA_CERT                    = "phase2-ca-cert"
	NM_SETTING_802_1X_PHASE2_CA_PATH                    = "phase2-ca-path"
	NM_SETTING_802_1X_PHASE2_SUBJECT_MATCH              = "phase2-subject-match"
	NM_SETTING_802_1X_PHASE2_ALTSUBJECT_MATCHES         = "phase2-altsubject-matches"
	NM_SETTING_802_1X_PHASE2_CLIENT_CERT                = "phase2-client-cert"
	NM_SETTING_802_1X_PASSWORD                          = "password"
	NM_SETTING_802_1X_PASSWORD_FLAGS                    = "password-flags"
	NM_SETTING_802_1X_PASSWORD_RAW                      = "password-raw"
	NM_SETTING_802_1X_PASSWORD_RAW_FLAGS                = "password-raw-flags"
	NM_SETTING_802_1X_PRIVATE_KEY                       = "private-key"
	NM_SETTING_802_1X_PRIVATE_KEY_PASSWORD              = "private-key-password"
	NM_SETTING_802_1X_PRIVATE_KEY_PASSWORD_FLAGS        = "private-key-password-flags"
	NM_SETTING_802_1X_PHASE2_PRIVATE_KEY                = "phase2-private-key"
	NM_SETTING_802_1X_PHASE2_PRIVATE_KEY_PASSWORD       = "phase2-private-key-password"
	NM_SETTING_802_1X_PHASE2_PRIVATE_KEY_PASSWORD_FLAGS = "phase2-private-key-password-flags"
	NM_SETTING_802_1X_PIN                               = "pin"
	NM_SETTING_802_1X_PIN_FLAGS                         = "pin-flags"
	NM_SETTING_802_1X_SYSTEM_CA_CERTS                   = "system-ca-certs"
)

// /usr/include/libnm/nm-setting-adsl.h
const (
	NM_SETTING_ADSL_SETTING_NAME        = "adsl"
	NM_SETTING_ADSL_USERNAME            = "username"
	NM_SETTING_ADSL_PASSWORD            = "password"
	NM_SETTING_ADSL_PASSWORD_FLAGS      = "password-flags"
	NM_SETTING_ADSL_PROTOCOL            = "protocol"
	NM_SETTING_ADSL_ENCAPSULATION       = "encapsulation"
	NM_SETTING_ADSL_VPI                 = "vpi"
	NM_SETTING_ADSL_VCI                 = "vci"
	NM_SETTING_ADSL_PROTOCOL_PPPOA      = "pppoa"
	NM_SETTING_ADSL_PROTOCOL_PPPOE      = "pppoe"
	NM_SETTING_ADSL_PROTOCOL_IPOATM     = "ipoatm"
	NM_SETTING_ADSL_ENCAPSULATION_VCMUX = "vcmux"
	NM_SETTING_ADSL_ENCAPSULATION_LLC   = "llc"
)

// /usr/include/libnm/nm-setting-bluetooth.h
const (
	NM_SETTING_BLUETOOTH_SETTING_NAME = "bluetooth"
	NM_SETTING_BLUETOOTH_BDADDR       = "bdaddr"
	NM_SETTING_BLUETOOTH_TYPE         = "type"
	NM_SETTING_BLUETOOTH_TYPE_DUN     = "dun"
	NM_SETTING_BLUETOOTH_TYPE_PANU    = "panu"
)

// /usr/include/libnm/nm-setting-bond.h
const (
	NM_SETTING_BOND_SETTING_NAME            = "bond"
	NM_SETTING_BOND_OPTIONS                 = "options"
	NM_SETTING_BOND_OPTION_MODE             = "mode"
	NM_SETTING_BOND_OPTION_MIIMON           = "miimon"
	NM_SETTING_BOND_OPTION_DOWNDELAY        = "downdelay"
	NM_SETTING_BOND_OPTION_UPDELAY          = "updelay"
	NM_SETTING_BOND_OPTION_ARP_INTERVAL     = "arp_interval"
	NM_SETTING_BOND_OPTION_ARP_IP_TARGET    = "arp_ip_target"
	NM_SETTING_BOND_OPTION_ARP_VALIDATE     = "arp_validate"
	NM_SETTING_BOND_OPTION_PRIMARY          = "primary"
	NM_SETTING_BOND_OPTION_PRIMARY_RESELECT = "primary_reselect"
	NM_SETTING_BOND_OPTION_FAIL_OVER_MAC    = "fail_over_mac"
	NM_SETTING_BOND_OPTION_USE_CARRIER      = "use_carrier"
	NM_SETTING_BOND_OPTION_AD_SELECT        = "ad_select"
	NM_SETTING_BOND_OPTION_XMIT_HASH_POLICY = "xmit_hash_policy"
	NM_SETTING_BOND_OPTION_RESEND_IGMP      = "resend_igmp"
	NM_SETTING_BOND_OPTION_LACP_RATE        = "lacp_rate"
)

// /usr/include/libnm/nm-setting-bridge.h
const (
	NM_SETTING_BRIDGE_SETTING_NAME  = "bridge"
	NM_SETTING_BRIDGE_MAC_ADDRESS   = "mac-address"
	NM_SETTING_BRIDGE_STP           = "stp"
	NM_SETTING_BRIDGE_PRIORITY      = "priority"
	NM_SETTING_BRIDGE_FORWARD_DELAY = "forward-delay"
	NM_SETTING_BRIDGE_HELLO_TIME    = "hello-time"
	NM_SETTING_BRIDGE_MAX_AGE       = "max-age"
	NM_SETTING_BRIDGE_AGEING_TIME   = "ageing-time"
)

// /usr/include/libnm/nm-setting-bridge-port.h
const (
	NM_SETTING_BRIDGE_PORT_SETTING_NAME = "bridge-port"
	NM_SETTING_BRIDGE_PORT_PRIORITY     = "priority"
	NM_SETTING_BRIDGE_PORT_PATH_COST    = "path-cost"
	NM_SETTING_BRIDGE_PORT_HAIRPIN_MODE = "hairpin-mode"
)

// /usr/include/libnm/nm-setting-cdma.h
const (
	NM_SETTING_CDMA_SETTING_NAME   = "cdma"
	NM_SETTING_CDMA_NUMBER         = "number"
	NM_SETTING_CDMA_USERNAME       = "username"
	NM_SETTING_CDMA_PASSWORD       = "password"
	NM_SETTING_CDMA_PASSWORD_FLAGS = "password-flags"
)

// /usr/include/libnm/nm-setting-connection.h
const (
	NM_SETTING_CONNECTION_SETTING_NAME         = "connection"
	NM_SETTING_CONNECTION_ID                   = "id"
	NM_SETTING_CONNECTION_UUID                 = "uuid"
	NM_SETTING_CONNECTION_INTERFACE_NAME       = "interface-name"
	NM_SETTING_CONNECTION_TYPE                 = "type"
	NM_SETTING_CONNECTION_AUTOCONNECT          = "autoconnect"
	NM_SETTING_CONNECTION_AUTOCONNECT_PRIORITY = "autoconnect-priority"
	NM_SETTING_CONNECTION_TIMESTAMP            = "timestamp"
	NM_SETTING_CONNECTION_READ_ONLY            = "read-only"
	NM_SETTING_CONNECTION_PERMISSIONS          = "permissions"
	NM_SETTING_CONNECTION_ZONE                 = "zone"
	NM_SETTING_CONNECTION_MASTER               = "master"
	NM_SETTING_CONNECTION_SLAVE_TYPE           = "slave-type"
	NM_SETTING_CONNECTION_AUTOCONNECT_SLAVES   = "autoconnect-slaves"
	NM_SETTING_CONNECTION_SECONDARIES          = "secondaries"
	NM_SETTING_CONNECTION_GATEWAY_PING_TIMEOUT = "gateway-ping-timeout"
	NM_SETTING_CONNECTION_METERED              = "metered"
)

// /usr/include/libnm/nm-setting-dcb.h
const (
	NM_SETTING_DCB_SETTING_NAME                = "dcb"
	NM_SETTING_DCB_FCOE_MODE_FABRIC            = "fabric"
	NM_SETTING_DCB_FCOE_MODE_VN2VN             = "vn2vn"
	NM_SETTING_DCB_APP_FCOE_FLAGS              = "app-fcoe-flags"
	NM_SETTING_DCB_APP_FCOE_PRIORITY           = "app-fcoe-priority"
	NM_SETTING_DCB_APP_FCOE_MODE               = "app-fcoe-mode"
	NM_SETTING_DCB_APP_ISCSI_FLAGS             = "app-iscsi-flags"
	NM_SETTING_DCB_APP_ISCSI_PRIORITY          = "app-iscsi-priority"
	NM_SETTING_DCB_APP_FIP_FLAGS               = "app-fip-flags"
	NM_SETTING_DCB_APP_FIP_PRIORITY            = "app-fip-priority"
	NM_SETTING_DCB_PRIORITY_FLOW_CONTROL_FLAGS = "priority-flow-control-flags"
	NM_SETTING_DCB_PRIORITY_FLOW_CONTROL       = "priority-flow-control"
	NM_SETTING_DCB_PRIORITY_GROUP_FLAGS        = "priority-group-flags"
	NM_SETTING_DCB_PRIORITY_GROUP_ID           = "priority-group-id"
	NM_SETTING_DCB_PRIORITY_GROUP_BANDWIDTH    = "priority-group-bandwidth"
	NM_SETTING_DCB_PRIORITY_BANDWIDTH          = "priority-bandwidth"
	NM_SETTING_DCB_PRIORITY_STRICT_BANDWIDTH   = "priority-strict-bandwidth"
	NM_SETTING_DCB_PRIORITY_TRAFFIC_CLASS      = "priority-traffic-class"
)

// /usr/include/libnm/nm-setting-generic.h
const (
	NM_SETTING_GENERIC_SETTING_NAME = "generic"
)

// /usr/include/libnm/nm-setting-gsm.h
const (
	NM_SETTING_GSM_SETTING_NAME   = "gsm"
	NM_SETTING_GSM_NUMBER         = "number"
	NM_SETTING_GSM_USERNAME       = "username"
	NM_SETTING_GSM_PASSWORD       = "password"
	NM_SETTING_GSM_PASSWORD_FLAGS = "password-flags"
	NM_SETTING_GSM_APN            = "apn"
	NM_SETTING_GSM_NETWORK_ID     = "network-id"
	NM_SETTING_GSM_PIN            = "pin"
	NM_SETTING_GSM_PIN_FLAGS      = "pin-flags"
	NM_SETTING_GSM_HOME_ONLY      = "home-only"
)

// /usr/include/libnm/nm-setting-infiniband.h
const (
	NM_SETTING_INFINIBAND_SETTING_NAME   = "infiniband"
	NM_SETTING_INFINIBAND_MAC_ADDRESS    = "mac-address"
	NM_SETTING_INFINIBAND_MTU            = "mtu"
	NM_SETTING_INFINIBAND_TRANSPORT_MODE = "transport-mode"
	NM_SETTING_INFINIBAND_P_KEY          = "p-key"
	NM_SETTING_INFINIBAND_PARENT         = "parent"
)

// /usr/include/libnm/nm-setting-ip4-config.h
const (
	NM_SETTING_IP4_CONFIG_SETTING_NAME      = "ipv4"
	NM_SETTING_IP4_CONFIG_DHCP_CLIENT_ID    = "dhcp-client-id"
	NM_SETTING_IP4_CONFIG_METHOD_AUTO       = "auto"
	NM_SETTING_IP4_CONFIG_METHOD_LINK_LOCAL = "link-local"
	NM_SETTING_IP4_CONFIG_METHOD_MANUAL     = "manual"
	NM_SETTING_IP4_CONFIG_METHOD_SHARED     = "shared"
	NM_SETTING_IP4_CONFIG_METHOD_DISABLED   = "disabled"
)

// /usr/include/libnm/nm-setting-ip6-config.h
const (
	NM_SETTING_IP6_CONFIG_SETTING_NAME      = "ipv6"
	NM_SETTING_IP6_CONFIG_IP6_PRIVACY       = "ip6-privacy"
	NM_SETTING_IP6_CONFIG_METHOD_IGNORE     = "ignore"
	NM_SETTING_IP6_CONFIG_METHOD_AUTO       = "auto"
	NM_SETTING_IP6_CONFIG_METHOD_DHCP       = "dhcp"
	NM_SETTING_IP6_CONFIG_METHOD_LINK_LOCAL = "link-local"
	NM_SETTING_IP6_CONFIG_METHOD_MANUAL     = "manual"
	NM_SETTING_IP6_CONFIG_METHOD_SHARED     = "shared"
)

// /usr/include/libnm/nm-setting-ip-config.h
const (
	NM_SETTING_IP_CONFIG_METHOD             = "method"
	NM_SETTING_IP_CONFIG_DNS                = "dns"
	NM_SETTING_IP_CONFIG_DNS_SEARCH         = "dns-search"
	NM_SETTING_IP_CONFIG_ADDRESSES          = "addresses"
	NM_SETTING_IP_CONFIG_GATEWAY            = "gateway"
	NM_SETTING_IP_CONFIG_ROUTES             = "routes"
	NM_SETTING_IP_CONFIG_ROUTE_METRIC       = "route-metric"
	NM_SETTING_IP_CONFIG_IGNORE_AUTO_ROUTES = "ignore-auto-routes"
	NM_SETTING_IP_CONFIG_IGNORE_AUTO_DNS    = "ignore-auto-dns"
	NM_SETTING_IP_CONFIG_DHCP_HOSTNAME      = "dhcp-hostname"
	NM_SETTING_IP_CONFIG_DHCP_SEND_HOSTNAME = "dhcp-send-hostname"
	NM_SETTING_IP_CONFIG_NEVER_DEFAULT      = "never-default"
	NM_SETTING_IP_CONFIG_MAY_FAIL           = "may-fail"
)

// /usr/include/libnm/nm-setting-olpc-mesh.h
const (
	NM_SETTING_OLPC_MESH_SETTING_NAME         = "802-11-olpc-mesh"
	NM_SETTING_OLPC_MESH_SSID                 = "ssid"
	NM_SETTING_OLPC_MESH_CHANNEL              = "channel"
	NM_SETTING_OLPC_MESH_DHCP_ANYCAST_ADDRESS = "dhcp-anycast-address"
)

// /usr/include/libnm/nm-setting-ppp.h
const (
	NM_SETTING_PPP_SETTING_NAME      = "ppp"
	NM_SETTING_PPP_NOAUTH            = "noauth"
	NM_SETTING_PPP_REFUSE_EAP        = "refuse-eap"
	NM_SETTING_PPP_REFUSE_PAP        = "refuse-pap"
	NM_SETTING_PPP_REFUSE_CHAP       = "refuse-chap"
	NM_SETTING_PPP_REFUSE_MSCHAP     = "refuse-mschap"
	NM_SETTING_PPP_REFUSE_MSCHAPV2   = "refuse-mschapv2"
	NM_SETTING_PPP_NOBSDCOMP         = "nobsdcomp"
	NM_SETTING_PPP_NODEFLATE         = "nodeflate"
	NM_SETTING_PPP_NO_VJ_COMP        = "no-vj-comp"
	NM_SETTING_PPP_REQUIRE_MPPE      = "require-mppe"
	NM_SETTING_PPP_REQUIRE_MPPE_128  = "require-mppe-128"
	NM_SETTING_PPP_MPPE_STATEFUL     = "mppe-stateful"
	NM_SETTING_PPP_CRTSCTS           = "crtscts"
	NM_SETTING_PPP_BAUD              = "baud"
	NM_SETTING_PPP_MRU               = "mru"
	NM_SETTING_PPP_MTU               = "mtu"
	NM_SETTING_PPP_LCP_ECHO_FAILURE  = "lcp-echo-failure"
	NM_SETTING_PPP_LCP_ECHO_INTERVAL = "lcp-echo-interval"
)

// /usr/include/libnm/nm-setting-pppoe.h
const (
	NM_SETTING_PPPOE_SETTING_NAME   = "pppoe"
	NM_SETTING_PPPOE_SERVICE        = "service"
	NM_SETTING_PPPOE_USERNAME       = "username"
	NM_SETTING_PPPOE_PASSWORD       = "password"
	NM_SETTING_PPPOE_PASSWORD_FLAGS = "password-flags"
)

// /usr/include/libnm/nm-setting-serial.h
const (
	NM_SETTING_SERIAL_SETTING_NAME = "serial"
	NM_SETTING_SERIAL_BAUD         = "baud"
	NM_SETTING_SERIAL_BITS         = "bits"
	NM_SETTING_SERIAL_PARITY       = "parity"
	NM_SETTING_SERIAL_STOPBITS     = "stopbits"
	NM_SETTING_SERIAL_SEND_DELAY   = "send-delay"
)

// /usr/include/libnm/nm-setting-team.h
const (
	NM_SETTING_TEAM_SETTING_NAME = "team"
	NM_SETTING_TEAM_CONFIG       = "config"
)

// /usr/include/libnm/nm-setting-team-port.h
const (
	NM_SETTING_TEAM_PORT_SETTING_NAME = "team-port"
	NM_SETTING_TEAM_PORT_CONFIG       = "config"
)

// /usr/include/libnm/nm-setting-vlan.h
const (
	NM_SETTING_VLAN_SETTING_NAME         = "vlan"
	NM_SETTING_VLAN_PARENT               = "parent"
	NM_SETTING_VLAN_ID                   = "id"
	NM_SETTING_VLAN_FLAGS                = "flags"
	NM_SETTING_VLAN_INGRESS_PRIORITY_MAP = "ingress-priority-map"
	NM_SETTING_VLAN_EGRESS_PRIORITY_MAP  = "egress-priority-map"
)

// /usr/include/libnm/nm-setting-vpn.h
const (
	NM_SETTING_VPN_SETTING_NAME = "vpn"
	NM_SETTING_VPN_SERVICE_TYPE = "service-type"
	NM_SETTING_VPN_USER_NAME    = "user-name"
	NM_SETTING_VPN_PERSISTENT   = "persistent"
	NM_SETTING_VPN_DATA         = "data"
	NM_SETTING_VPN_SECRETS      = "secrets"
)

// /usr/include/libnm/nm-setting-wimax.h
const (
	NM_SETTING_WIMAX_SETTING_NAME = "wimax"
	NM_SETTING_WIMAX_NETWORK_NAME = "network-name"
	NM_SETTING_WIMAX_MAC_ADDRESS  = "mac-address"
)

// /usr/include/libnm/nm-setting-wired.h
const (
	NM_SETTING_WIRED_SETTING_NAME          = "802-3-ethernet"
	NM_SETTING_WIRED_PORT                  = "port"
	NM_SETTING_WIRED_SPEED                 = "speed"
	NM_SETTING_WIRED_DUPLEX                = "duplex"
	NM_SETTING_WIRED_AUTO_NEGOTIATE        = "auto-negotiate"
	NM_SETTING_WIRED_MAC_ADDRESS           = "mac-address"
	NM_SETTING_WIRED_CLONED_MAC_ADDRESS    = "cloned-mac-address"
	NM_SETTING_WIRED_MAC_ADDRESS_BLACKLIST = "mac-address-blacklist"
	NM_SETTING_WIRED_MTU                   = "mtu"
	NM_SETTING_WIRED_S390_SUBCHANNELS      = "s390-subchannels"
	NM_SETTING_WIRED_S390_NETTYPE          = "s390-nettype"
	NM_SETTING_WIRED_S390_OPTIONS          = "s390-options"
	NM_SETTING_WIRED_WAKE_ON_LAN           = "wake-on-lan"
	NM_SETTING_WIRED_WAKE_ON_LAN_PASSWORD  = "wake-on-lan-password"
)

// /usr/include/libnm/nm-setting-wireless.h
const (
	NM_SETTING_WIRELESS_SETTING_NAME          = "802-11-wireless"
	NM_SETTING_WIRELESS_SSID                  = "ssid"
	NM_SETTING_WIRELESS_MODE                  = "mode"
	NM_SETTING_WIRELESS_BAND                  = "band"
	NM_SETTING_WIRELESS_CHANNEL               = "channel"
	NM_SETTING_WIRELESS_BSSID                 = "bssid"
	NM_SETTING_WIRELESS_RATE                  = "rate"
	NM_SETTING_WIRELESS_TX_POWER              = "tx-power"
	NM_SETTING_WIRELESS_MAC_ADDRESS           = "mac-address"
	NM_SETTING_WIRELESS_CLONED_MAC_ADDRESS    = "cloned-mac-address"
	NM_SETTING_WIRELESS_MAC_ADDRESS_BLACKLIST = "mac-address-blacklist"
	NM_SETTING_WIRELESS_MTU                   = "mtu"
	NM_SETTING_WIRELESS_SEEN_BSSIDS           = "seen-bssids"
	NM_SETTING_WIRELESS_HIDDEN                = "hidden"
	NM_SETTING_WIRELESS_MODE_ADHOC            = "adhoc"
	NM_SETTING_WIRELESS_MODE_AP               = "ap"
	NM_SETTING_WIRELESS_MODE_INFRA            = "infrastructure"
)

// /usr/include/libnm/nm-setting-wireless-security.h
const (
	NM_SETTING_WIRELESS_SECURITY_SETTING_NAME        = "802-11-wireless-security"
	NM_SETTING_WIRELESS_SECURITY_KEY_MGMT            = "key-mgmt"
	NM_SETTING_WIRELESS_SECURITY_WEP_TX_KEYIDX       = "wep-tx-keyidx"
	NM_SETTING_WIRELESS_SECURITY_AUTH_ALG            = "auth-alg"
	NM_SETTING_WIRELESS_SECURITY_PROTO               = "proto"
	NM_SETTING_WIRELESS_SECURITY_PAIRWISE            = "pairwise"
	NM_SETTING_WIRELESS_SECURITY_GROUP               = "group"
	NM_SETTING_WIRELESS_SECURITY_LEAP_USERNAME       = "leap-username"
	NM_SETTING_WIRELESS_SECURITY_WEP_KEY0            = "wep-key0"
	NM_SETTING_WIRELESS_SECURITY_WEP_KEY1            = "wep-key1"
	NM_SETTING_WIRELESS_SECURITY_WEP_KEY2            = "wep-key2"
	NM_SETTING_WIRELESS_SECURITY_WEP_KEY3            = "wep-key3"
	NM_SETTING_WIRELESS_SECURITY_WEP_KEY_FLAGS       = "wep-key-flags"
	NM_SETTING_WIRELESS_SECURITY_WEP_KEY_TYPE        = "wep-key-type"
	NM_SETTING_WIRELESS_SECURITY_PSK                 = "psk"
	NM_SETTING_WIRELESS_SECURITY_PSK_FLAGS           = "psk-flags"
	NM_SETTING_WIRELESS_SECURITY_LEAP_PASSWORD       = "leap-password"
	NM_SETTING_WIRELESS_SECURITY_LEAP_PASSWORD_FLAGS = "leap-password-flags"
)
