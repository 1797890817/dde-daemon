import os
import subprocess
import glob
import shutil
from SCons.Script.SConscript import SConsEnvironment
import SCons.Util

GOROOT='/usr/lib/go'
GOPATH=os.getcwd()

os.environ['GOROOT']=GOROOT
os.environ['GOPATH']=GOPATH

bin_components = os.listdir('bin')
components = ['accounts',
              'audio',
	      'screensaver',
              'bluetooth',
              'clipboard',
              'datetime',
              'display' ,
              'dock' ,
              'grub2',
              'inputdevices',
              'keybinding',
              'launcher',
              'mime',
              'mounts',
              'network',
              'Planner',
              'power',
              'screen_edges',
              'systeminfo',
              'themes',
              'dsc',
              'mpris'
              ]

SConsignFile()
opts=Variables()
opts.AddVariables(
    PathVariable('PREFIX', 'install-path base', '/usr'),
    BoolVariable('enable_i18n', 'enable i18n support', 'False'),
    PathVariable('DESTDIR', 'install to $DESTDIR/$PREFIX', '/')
)

ipackage_instdir = os.path.join('$DESTDIR', '$PREFIX')
ipackage_instdir_go = os.path.join(ipackage_instdir, 'lib/deepin-daemon')
ipackage_instdir_locale = os.path.join(ipackage_instdir, 'share/locale/')

env = Environment( tools = ['default', 'textfile'], options = opts, ENV = os.environ)

opts.Update(env)

Export('env')
if env['enable_i18n']:
    languages = SConscript('data/po/SConscript')
else :
    languages = None

#prepare source dir
if os.path.exists(os.path.join(GOPATH, 'src')):
    shutil.rmtree(os.path.join(GOPATH,'src'))
os.makedirs(os.path.join(GOPATH,'src','dde-daemon'))

for src in glob.glob(os.path.join(os.getcwd(), "*.go")):
    name = os.path.basename(src)
    os.symlink(src, os.path.join(GOPATH, 'src', 'dde-daemon', name))

for component in components:
    os.symlink(os.path.join(os.getcwd(),component), os.path.join(GOPATH, 'src', 'dde-daemon', component))

owd = os.getcwd()
for component in bin_components:
    try:
        os.chdir('bin/%s' % component)
        print "Go build %s" % component
        p = subprocess.Popen('go build', shell=True).wait()
        if p != 0:
            exit(1)
    except:
        print "Error while building %s" % component
        exit(1)
    finally:
        os.chdir(owd)


for component in bin_components:
    print "install %s " % component
    env.Install(ipackage_instdir_go, 'bin/%s/%s' % (component,component))

if languages:
    for language in languages:
        env.Install(ipackage_instdir_locale, 'data/po/%s' % language)

cwd = os.getcwd()
env.Install(os.path.join('$DESTDIR','etc/dbus-1/system.d/'), glob.glob(os.path.join(cwd,'data/conf','*.conf')))
env.Install(os.path.join('$DESTDIR', 'usr/share/dbus-1/services/'), glob.glob(os.path.join(cwd,'data/services','*.service')))
env.Install(os.path.join('$DESTDIR', 'usr/share/dbus-1/system-services/'), glob.glob(os.path.join(cwd,'data/system-services','*.service')))
env.Install(os.path.join('$DESTDIR', 'usr/share/polkit-1/actions/'), glob.glob(os.path.join(cwd,'data/polkit-action','*.policy')))
env.Install(os.path.join('$DESTDIR','usr/share/glib-2.0/schemas'), glob.glob(os.path.join(cwd,'data/schemas/','*.xml')))

if os.path.exists(os.path.join(cwd,'data/lang')):
    env.Install(os.path.join(ipackage_instdir,'share/dde-daemon'), os.path.join(cwd,'data/lang'))
if os.path.exists(os.path.join(cwd,'data/template')):
    env.Install(os.path.join(ipackage_instdir,'share/dde-daemon'), os.path.join(cwd,'data/template'))

for f in glob.glob(os.path.join(cwd,'data/tool/', 'wireless_script*')):
    target = os.path.join(ipackage_instdir,'bin/wireless-script')
    env.InstallAs(target, f)
    #TODO:need fix prem
    break

env.Alias('install', '$DESTDIR')

Help(opts.GenerateHelpText(env))
